{"version":3,"sources":["utils/config.js","utils/near.js","components/utils/Cover.js","utils/market.js","components/marketplace/AddProduct.js","components/utils/Loader.js","components/marketplace/Product.js","components/marketplace/Products.js","components/Wallet.js","assets/img/sandwich.jpg","App.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Cover","name","coverImg","className","style","background","minHeight","maxWidth","src","alt","Button","onClick","variant","defaultProps","GAS","buyProduct","id","price","productId","AddProduct","save","useState","setName","image","setImage","description","setDescription","setLocation","setPrice","show","setShow","handleClose","width","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","target","value","placeholder","as","height","Footer","disabled","Loader","Spinner","animation","role","Product","product","buy","sold","owner","Col","Card","Stack","direction","gap","Badge","bg","objectFit","Text","utils","format","Products","products","setProducts","loading","setLoading","getProducts","useCallback","console","log","error","addProduct","data","uuid4","parseNearAmount","setProduct","then","resp","useEffect","Row","xs","sm","lg","map","_product","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","align","size","Menu","Item","href","Divider","App","balance","setBalance","getBalance","Container","fluid","Nav","nearInitPromise","initializeContract","ReactDOM","createRoot","document","getElementById","render","StrictMode","catch"],"mappings":"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","file":"static/js/main.1d06ff03.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'near101.omar45.testnet'; // line 1\r\n\r\nfunction environment(env) {\r\n  switch (env) {\r\n    case 'mainnet': // line 5\r\n      return {\r\n        networkId: 'mainnet',\r\n        nodeUrl: 'https://rpc.mainnet.near.org',\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: 'https://wallet.near.org',\r\n        helperUrl: 'https://helper.mainnet.near.org',\r\n        explorerUrl: 'https://explorer.mainnet.near.org',\r\n      };\r\n    case 'testnet': // line 14\r\n      return {\r\n        networkId: 'testnet',\r\n        nodeUrl: 'https://rpc.testnet.near.org',\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: 'https://wallet.testnet.near.org',\r\n        helperUrl: 'https://helper.testnet.near.org',\r\n        explorerUrl: 'https://explorer.testnet.near.org',\r\n      };\r\n    default:\r\n      throw Error(`Unknown environment '${env}'.`);\r\n  }\r\n}\r\n\r\nexport default environment;\r\n","import { Contract, WalletConnection, connect, keyStores } from 'near-api-js';\r\n\r\nimport environment from './config';\r\nimport { formatNearAmount } from 'near-api-js/lib/utils/format';\r\n\r\nconst nearEnv = environment('testnet');\r\n\r\nexport async function initializeContract() {\r\n  // We create a near object that we will use to interact with the NEAR network.\r\n  // It holds a keyStore object that stores the wallet information\r\n  // which is stored in the browser's local storage.\r\n\r\n  const near = await connect(\r\n    Object.assign(\r\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\r\n      nearEnv\r\n    )\r\n  );\r\n\r\n  // Then we create a WalletConnection object that we will use to interact with the wallet.\r\n  // To sign in, sign out, get the account ID, and get the account balance.\r\n\r\n  window.walletConnection = new WalletConnection(near);\r\n  window.accountId = window.walletConnection.getAccountId();\r\n\r\n  // We create a Contract object that we will use to interact with the smart contract.\r\n  // We pass the account, the name of the smart contract,\r\n  // and the methods that we want to use to the constructor.\r\n\r\n  window.contract = new Contract(\r\n    window.walletConnection.account(),\r\n    nearEnv.contractName,\r\n    {\r\n      viewMethods: ['getProduct', 'getProducts'],\r\n      changeMethods: ['buyProduct', 'setProduct'],\r\n    }\r\n  );\r\n}\r\n\r\nexport async function accountBalance() {\r\n  return formatNearAmount(\r\n    (await window.walletConnection.account().getAccountBalance()).total,\r\n    2\r\n  );\r\n}\r\n\r\nexport async function getAccountId() {\r\n  return window.walletConnection.getAccountId();\r\n}\r\n\r\nexport function login() {\r\n  window.walletConnection.requestSignIn(nearEnv.contractName);\r\n}\r\n\r\nexport function logout() {\r\n  window.walletConnection.signOut();\r\n  window.location.reload();\r\n}\r\n","import { Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className='d-flex justify-content-center flex-column text-center '\r\n        style={{ background: '#000', minHeight: '100vh' }}>\r\n        <div className='mt-auto text-light mb-5'>\r\n          <div\r\n            className=' ratio ratio-1x1 mx-auto mb-2'\r\n            style={{ maxWidth: '320px' }}>\r\n            <img src={coverImg} alt='' />\r\n          </div>\r\n          <h1>{name}</h1>\r\n          <p>Please connect your wallet to continue.</p>\r\n          <Button\r\n            onClick={login}\r\n            variant='outline-light'\r\n            className='rounded-pill px-3 mt-3'>\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className='mt-auto text-secondary'>Powered by NEAR</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: '',\r\n};\r\n\r\nexport default Cover;\r\n","import { parseNearAmount } from 'near-api-js/lib/utils/format';\r\nimport { v4 as uuid4 } from 'uuid';\r\n\r\nconst GAS = 100000000000000;\r\n\r\nexport function createProduct(product) {\r\n  product.id = uuid4();\r\n  // convert the price to the correct format\r\n  product.price = parseNearAmount(product.price + '');\r\n  return window.contract.setProduct({ product });\r\n}\r\n\r\nexport function getProducts() {\r\n  return window.contract.getProducts();\r\n}\r\n\r\nexport async function buyProduct({ id, price }) {\r\n  await window.contract.buyProduct({ productId: id }, GAS, price);\r\n}\r\n","import { Button, FloatingLabel, Form, Modal } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddProduct = ({ save }) => {\r\n  const [name, setName] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const isFormFilled = () => name && image && description && location && price;\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant='dark'\r\n        className='rounded-pill px-0'\r\n        style={{ width: '38px' }}>\r\n        <i className='bi bi-plus'></i>\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId='inputName'\r\n              label='Product name'\r\n              className='mb-3'>\r\n              <Form.Control\r\n                type='text'\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                placeholder='Enter name of product'\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId='inputUrl'\r\n              label='Image URL'\r\n              className='mb-3'>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Image URL'\r\n                onChange={(e) => {\r\n                  setImage(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId='inputDescription'\r\n              label='Description'\r\n              className='mb-3'>\r\n              <Form.Control\r\n                as='textarea'\r\n                placeholder='description'\r\n                style={{ height: '80px' }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId='inputLocation'\r\n              label='Location'\r\n              className='mb-3'>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Location'\r\n                onChange={(e) => {\r\n                  setLocation(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId='inputPrice'\r\n              label='Price'\r\n              className='mb-3'>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Price'\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant='outline-secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant='dark'\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                name,\r\n                image,\r\n                description,\r\n                location,\r\n                price,\r\n              });\r\n              handleClose();\r\n            }}>\r\n            Save product\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nAddProduct.propTypes = {\r\n  save: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddProduct;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => (\r\n  <div className='d-flex justify-content-center'>\r\n    <Spinner animation='border' role='status' className='opacity-25'>\r\n      <span className='visually-hidden'>Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import { Badge, Button, Card, Col, Stack } from 'react-bootstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { utils } from 'near-api-js';\r\n\r\nconst Product = ({ product, buy }) => {\r\n  const { id, price, name, description, sold, location, image, owner } =\r\n    product;\r\n\r\n  const triggerBuy = () => {\r\n    buy(id, price);\r\n  };\r\n\r\n  return (\r\n    <Col key={id}>\r\n      <Card className=' h-100'>\r\n        <Card.Header>\r\n          <Stack direction='horizontal' gap={2}>\r\n            <span className='font-monospace text-secondary'>{owner}</span>\r\n            <Badge bg='secondary' className='ms-auto'>\r\n              {sold} Sold\r\n            </Badge>\r\n          </Stack>\r\n        </Card.Header>\r\n        <div className=' ratio ratio-4x3'>\r\n          <img src={image} alt={name} style={{ objectFit: 'cover' }} />\r\n        </div>\r\n        <Card.Body className='d-flex  flex-column text-center'>\r\n          <Card.Title>{name}</Card.Title>\r\n          <Card.Text className='flex-grow-1 '>{description}</Card.Text>\r\n          <Card.Text className='text-secondary'>\r\n            <span>{location}</span>\r\n          </Card.Text>\r\n          <Button\r\n            variant='outline-dark'\r\n            onClick={triggerBuy}\r\n            className='w-100 py-3'>\r\n            Buy for {utils.format.formatNearAmount(price)} NEAR\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.instanceOf(Object).isRequired,\r\n  buy: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Product;\r\n","// import { NotificationError, NotificationSuccess } from '../utils/Notifications';\r\n\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n  buyProduct,\r\n  createProduct,\r\n  getProducts as getProductList,\r\n} from '../../utils/market';\r\n\r\nimport AddProduct from './AddProduct';\r\nimport Loader from '../utils/Loader';\r\nimport Product from './Product';\r\nimport { Row } from 'react-bootstrap';\r\n\r\n// import { toast } from 'react-toastify';\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getProducts = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setProducts(await getProductList());\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  });\r\n  const addProduct = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      createProduct(data).then((resp) => {\r\n        getProducts();\r\n      });\r\n      // toast(<NotificationSuccess text='Product added successfully.' />);\r\n    } catch (error) {\r\n      console.log({ error });\r\n      // toast(<NotificationError text='Failed to create a product.' />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const buy = async (id, price) => {\r\n    try {\r\n      await buyProduct({\r\n        id,\r\n        price,\r\n      }).then((resp) => getProducts());\r\n      // toast(<NotificationSuccess text='Product bought successfully' />);\r\n    } catch (error) {\r\n      // toast(<NotificationError text='Failed to purchase product.' />);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <>\r\n          <div className='d-flex justify-content-between align-items-center mb-4'>\r\n            <h1 className='fs-4 fw-bold mb-0'>Street Food</h1>\r\n            <AddProduct save={addProduct} />\r\n          </div>\r\n          <Row xs={1} sm={2} lg={3} className='g-3  mb-5 g-xl-4 g-xxl-5'>\r\n            {products.map((_product) => (\r\n              <Product\r\n                product={{\r\n                  ..._product,\r\n                }}\r\n                buy={buy}\r\n                key={_product.id}\r\n              />\r\n            ))}\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { Dropdown, Spinner, Stack } from 'react-bootstrap';\r\n\r\nimport React from 'react';\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant='light'\r\n            align='end'\r\n            id='dropdown-basic'\r\n            className='d-flex align-items-center border rounded-pill py-1'>\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className='ms-1'> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation='border' size='sm' className='opacity-25' />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className='shadow-lg border-0'>\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target='_blank'>\r\n              <Stack direction='horizontal' gap={2}>\r\n                <i className='bi bi-person-circle fs-4' />\r\n                <span className='font-monospace'>{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as='button'\r\n              className='d-flex align-items-center'\r\n              onClick={() => {\r\n                destroy();\r\n              }}>\r\n              <i className='bi bi-box-arrow-right me-2 fs-4' />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;\r\n","export default __webpack_public_path__ + \"static/media/sandwich.2d312449.jpg\";","import './App.css';\n\nimport { Container, Nav } from 'react-bootstrap';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { accountBalance, logout as destroy, login } from './utils/near';\n\nimport Cover from './components/utils/Cover';\n// import { Notification } from './components/utils/Notifications';\nimport Products from './components/marketplace/Products';\nimport Wallet from './components/Wallet';\nimport coverImg from './assets/img/sandwich.jpg';\n\nconst App = function AppWrapper() {\n  const account = window.walletConnection.account();\n\n  const [balance, setBalance] = useState('0');\n\n  const getBalance = useCallback(async () => {\n    if (account.accountId) {\n      setBalance(await accountBalance());\n    }\n  });\n\n  useEffect(() => {\n    getBalance();\n  }, [getBalance]);\n\n  return (\n    <>\n      {/* <Notification /> */}\n      {account.accountId ? (\n        <Container fluid='md'>\n          <Nav className='justify-content-end pt-3 pb-5'>\n            <Nav.Item>\n              <Wallet\n                address={account.accountId}\n                amount={balance}\n                symbol='NEAR'\n                destroy={destroy}\n              />\n            </Nav.Item>\n          </Nav>\n          <main>\n            <Products />\n          </main>\n        </Container>\n      ) : (\n        <Cover name='Street Food' login={login} coverImg={coverImg} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n\n// function App() {\n//   const account = window.walletConnection.account();\n\n//   const [products, setProducts] = useState([]);\n\n//   const fetchProducts = useCallback(async () => {\n//     if (account.accountId) {\n//       setProducts(await getProducts());\n//     }\n//   }, [account]);\n\n//   useEffect(() => {\n//     fetchProducts();\n//   }, [fetchProducts]);\n\n//   return (\n//     <>\n//       {account.accountId ? (\n//         products.forEach((product) => console.log(product))\n//       ) : (\n//         <button onClick={login}>CONNECT WALLET</button>\n//       )}\n//     </>\n//   );\n// }\n\n// export default App;\n","import 'bootstrap';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { initializeContract } from './utils/near';\n\nwindow.nearInitPromise = initializeContract()\n  .then(() => {\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  })\n  .catch(console.error);\n"],"sourceRoot":""}